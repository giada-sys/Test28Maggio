//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Test28Maggio.WcfClient.ClienteServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/Test28Maggio.Library")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodiceClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CognomeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CodiceCliente {
            get {
                return this.CodiceClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.CodiceClienteField, value) != true)) {
                    this.CodiceClienteField = value;
                    this.RaisePropertyChanged("CodiceCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cognome {
            get {
                return this.CognomeField;
            }
            set {
                if ((object.ReferenceEquals(this.CognomeField, value) != true)) {
                    this.CognomeField = value;
                    this.RaisePropertyChanged("Cognome");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClienteServiceReference.IClientiService")]
    public interface IClientiService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientiService/ListaClienti", ReplyAction="http://tempuri.org/IClientiService/ListaClientiResponse")]
        System.Collections.Generic.List<Test28Maggio.WcfClient.ClienteServiceReference.Cliente> ListaClienti();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientiService/ListaClienti", ReplyAction="http://tempuri.org/IClientiService/ListaClientiResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<Test28Maggio.WcfClient.ClienteServiceReference.Cliente>> ListaClientiAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientiService/OttieniClienteById", ReplyAction="http://tempuri.org/IClientiService/OttieniClienteByIdResponse")]
        Test28Maggio.WcfClient.ClienteServiceReference.Cliente OttieniClienteById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientiService/OttieniClienteById", ReplyAction="http://tempuri.org/IClientiService/OttieniClienteByIdResponse")]
        System.Threading.Tasks.Task<Test28Maggio.WcfClient.ClienteServiceReference.Cliente> OttieniClienteByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientiService/AggiungiCliente", ReplyAction="http://tempuri.org/IClientiService/AggiungiClienteResponse")]
        bool AggiungiCliente(Test28Maggio.WcfClient.ClienteServiceReference.Cliente nuovoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientiService/AggiungiCliente", ReplyAction="http://tempuri.org/IClientiService/AggiungiClienteResponse")]
        System.Threading.Tasks.Task<bool> AggiungiClienteAsync(Test28Maggio.WcfClient.ClienteServiceReference.Cliente nuovoCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientiService/ModificaCliente", ReplyAction="http://tempuri.org/IClientiService/ModificaClienteResponse")]
        bool ModificaCliente(Test28Maggio.WcfClient.ClienteServiceReference.Cliente updatedCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientiService/ModificaCliente", ReplyAction="http://tempuri.org/IClientiService/ModificaClienteResponse")]
        System.Threading.Tasks.Task<bool> ModificaClienteAsync(Test28Maggio.WcfClient.ClienteServiceReference.Cliente updatedCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientiService/EliminaCliente", ReplyAction="http://tempuri.org/IClientiService/EliminaClienteResponse")]
        bool EliminaCliente(Test28Maggio.WcfClient.ClienteServiceReference.Cliente deletedCliente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClientiService/EliminaCliente", ReplyAction="http://tempuri.org/IClientiService/EliminaClienteResponse")]
        System.Threading.Tasks.Task<bool> EliminaClienteAsync(Test28Maggio.WcfClient.ClienteServiceReference.Cliente deletedCliente);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientiServiceChannel : Test28Maggio.WcfClient.ClienteServiceReference.IClientiService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientiServiceClient : System.ServiceModel.ClientBase<Test28Maggio.WcfClient.ClienteServiceReference.IClientiService>, Test28Maggio.WcfClient.ClienteServiceReference.IClientiService {
        
        public ClientiServiceClient() {
        }
        
        public ClientiServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientiServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientiServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientiServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<Test28Maggio.WcfClient.ClienteServiceReference.Cliente> ListaClienti() {
            return base.Channel.ListaClienti();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<Test28Maggio.WcfClient.ClienteServiceReference.Cliente>> ListaClientiAsync() {
            return base.Channel.ListaClientiAsync();
        }
        
        public Test28Maggio.WcfClient.ClienteServiceReference.Cliente OttieniClienteById(int id) {
            return base.Channel.OttieniClienteById(id);
        }
        
        public System.Threading.Tasks.Task<Test28Maggio.WcfClient.ClienteServiceReference.Cliente> OttieniClienteByIdAsync(int id) {
            return base.Channel.OttieniClienteByIdAsync(id);
        }
        
        public bool AggiungiCliente(Test28Maggio.WcfClient.ClienteServiceReference.Cliente nuovoCliente) {
            return base.Channel.AggiungiCliente(nuovoCliente);
        }
        
        public System.Threading.Tasks.Task<bool> AggiungiClienteAsync(Test28Maggio.WcfClient.ClienteServiceReference.Cliente nuovoCliente) {
            return base.Channel.AggiungiClienteAsync(nuovoCliente);
        }
        
        public bool ModificaCliente(Test28Maggio.WcfClient.ClienteServiceReference.Cliente updatedCliente) {
            return base.Channel.ModificaCliente(updatedCliente);
        }
        
        public System.Threading.Tasks.Task<bool> ModificaClienteAsync(Test28Maggio.WcfClient.ClienteServiceReference.Cliente updatedCliente) {
            return base.Channel.ModificaClienteAsync(updatedCliente);
        }
        
        public bool EliminaCliente(Test28Maggio.WcfClient.ClienteServiceReference.Cliente deletedCliente) {
            return base.Channel.EliminaCliente(deletedCliente);
        }
        
        public System.Threading.Tasks.Task<bool> EliminaClienteAsync(Test28Maggio.WcfClient.ClienteServiceReference.Cliente deletedCliente) {
            return base.Channel.EliminaClienteAsync(deletedCliente);
        }
    }
}
